
//
//	Virtual Robotics 1.0
//	Round Hand parts
//
//	class RoundFinger( filename, length=0.8 )
//	class RoundPalm( left, filename, length=1.4 )
//


import * as THREE from "../../libs/three.module.min.js";
import { ConvexGeometry } from "../../libs/geometries/ConvexGeometry.js";
import { GLTFPart} from "../parts/gltf.js";
import { getScene } from "../scene.js";
import * as PHYSICS from "../physics.js";


// generated by obj-reader.html
const VERTICES = {
	
	'round-finger-5.glb': [[-0.14,0.22,0.12],[-0.15,0.17,0.15],[-0.14,0.22,-0.12],[-0.15,0.17,-0.15],[0.15,0.05,0.15],[0.15,0.05,-0.15],[-0.04,-0.31,0.04],[-0.15,-0.14,0.15],[-0.15,-0.14,-0.15],[-0.04,-0.31,-0.04],[0.15,-0.14,0.15],[0.04,-0.31,0.04],[0.15,-0.14,-0.15],[0.04,-0.31,-0.04],[-0.11,-0.24,-0.12],[-0.11,-0.24,0.12],[0.11,-0.24,-0.12],[0.11,-0.24,0.12]],

	'round-finger-8.glb':  [[-0.15,-0.24,-0.15],[-0.15,0.27,-0.15],[0.15,0.19,-0.15],[0.15,-0.24,-0.15],[0.15,-0.24,0.15],[0.15,0.19,0.15],[-0.15,0.27,0.15],[-0.15,-0.24,0.15],[-0.13,0.35,0.12],[-0.13,0.35,-0.12],[-0.11,-0.37,-0.12],[-0.11,-0.37,0.12],[0.11,-0.37,-0.12],[0.11,-0.37,0.12],[-0.04,-0.44,-0.04],[0.04,-0.44,-0.04],[0.04,-0.44,0.04],[-0.04,-0.44,0.04]],
	'anthro-finger-8.glb': [[-0.15,-0.24,-0.15],[-0.15,0.27,-0.15],[0.15,0.19,-0.15],[0.15,-0.24,-0.15],[0.15,-0.24,0.15],[0.15,0.19,0.15],[-0.15,0.27,0.15],[-0.15,-0.24,0.15],[-0.13,0.35,0.12],[-0.13,0.35,-0.12],[-0.11,-0.37,-0.12],[-0.11,-0.37,0.12],[0.11,-0.37,-0.12],[0.11,-0.37,0.12],[-0.04,-0.44,-0.04],[0.04,-0.44,-0.04],[0.04,-0.44,0.04],[-0.04,-0.44,0.04]],
	
	'round-tip.glb': [[0.05,0.32,-0.05],[-0.05,0.32,-0.05],[-0.05,0.32,0.05],[0.05,0.32,0.05],[-0.15,-0.14,-0.15],[-0.15,0.18,-0.15],[0.15,0.18,-0.15],[0.15,-0.14,-0.15],[0.15,-0.14,0.15],[0.15,0.18,0.15],[-0.15,0.18,0.15],[-0.15,-0.14,0.15],[-0.11,-0.24,-0.12],[-0.11,-0.24,0.12],[0.11,-0.24,-0.12],[0.11,-0.24,0.12],[-0.04,-0.31,-0.04],[0.04,-0.31,-0.04],[0.04,-0.31,0.04],[-0.04,-0.31,0.04],[0.12,0.25,-0.12],[0.12,0.25,0.12],[-0.12,0.25,-0.12],[-0.12,0.25,0.12]],
	
	'round-palm.glb': [[-0.65,-0.55,0.14],[-0.83,-0.05,0.14],[-0.65,-0.55,-0.14],[-0.83,-0.05,-0.14],[0.63,-0.59,0.14],[0.74,-0.36,0.14],[0.63,-0.59,-0.14],[0.74,-0.36,-0.14],[-0.72,0.57,0.14],[-0.36,0.81,0.14],[-0.29,0.68,-0.14],[-0.72,0.55,-0.14],[0.22,0.88,0.14],[0.7,0.05,0.14],[0.25,0.71,-0.14],[0.7,0.04,-0.14],[-0.38,-0.86,0.14],[-0.38,-0.86,-0.14],[0.36,-0.86,0.14],[0.36,-0.86,-0.14],[0.62,0.68,-0.14],[0.58,0.82,0.14],[-0.64,0.69,0.14],[-0.58,0.6,-0.14]],
}

// generated by obj-reader.html
const FACES = {
	'round-finger-5.glb':[[8,3,5,12],[10,4,1,7],[12,5,4,10],[0,2,3,1],[2,5,3],[2,0,4,5],[0,1,4],[7,1,3,8],[14,15,7,8],[16,14,8,12],[17,16,12,10],[15,17,10,7],[9,13,11,6],[9,6,15,14],[13,9,14,16],[11,13,16,17],[6,11,17,15]],
	
	'round-finger-8.glb':  [[0,1,2,3],[4,5,6,7],[3,2,5,4],[8,9,1,6],[9,2,1],[9,8,5,2],[8,6,5],[7,6,1,0],[10,11,7,0],[12,10,0,3],[13,12,3,4],[11,13,4,7],[14,15,16,17],[14,17,11,10],[15,14,10,12],[16,15,12,13],[17,16,13,11]],
	'anthro-finger-8.glb': [[0,1,2,3],[4,5,6,7],[3,2,5,4],[8,9,1,6],[9,2,1],[9,8,5,2],[8,6,5],[7,6,1,0],[10,11,7,0],[12,10,0,3],[13,12,3,4],[11,13,4,7],[14,15,16,17],[14,17,11,10],[15,14,10,12],[16,15,12,13],[17,16,13,11]],
	
	'round-tip.glb': [[0,1,2,3],[4,5,6,7],[8,9,10,11],[7,6,9,8],[23,22,5,10],[22,20,6,5],[20,21,9,6],[21,23,10,9],[11,10,5,4],[12,13,11,4],[14,12,4,7],[15,14,7,8],[13,15,8,11],[16,17,18,19],[16,19,13,12],[17,16,12,14],[18,17,14,15],[19,18,15,13],[0,3,21,20],[1,0,20,22],[2,1,22,23],[3,2,23,21]],
	
	'round-palm.glb': [[1,8,11,3],[7,15,13,5],[2,0,1,3],[4,6,7,5],[9,10,23,22],[14,12,21,20],[14,10,9,12],[17,19,18,16],[6,4,18,19],[5,13,21,12,9,22,8,1,0,16,18,4],[0,2,17,16],[20,21,13,15],[22,23,11,8],[3,11,23,10,14,20,15,7,6,19,17,2]],
}




class RoundFinger extends GLTFPart
{
	constructor ( filename, length=0.8 )
	{
		super( filename, length, recolor );
		
		this.addSlot( 0, length, 0 );
		
		filename = filename.split('/').pop();
		if( VERTICES[filename] && FACES[filename] )
		{
			// 3D convex shape
			var vertices = [...VERTICES[filename]];
			var faces = FACES[filename];

			// physics
			this.physics = PHYSICS.convex( vertices, faces );
			this.physics.threejs = this;
			this.debugConvex( vertices, faces );
		
			PHYSICS.bodies.push( this );
		}
		
		var that = this;
		function recolor( )
		{
			that.recolor( [0,0.21,1], [0.3,0.3,0.3] );
		}
	} // RoundFinger.constructor

	
} // RoundFinger





class RoundPalm extends GLTFPart
{
	constructor ( left, filename, length=1.4 )
	{
		super( filename, length, recolor );
		
		this.flip = left ? 1 : -1;
		
		var slot = this.addSlot( 0.53*this.flip*length, 0.50*length, 0 );
		slot.setRotation( Math.PI/2*(1+this.flip), -this.flip*Math.PI/2, Math.PI/2+this.flip*0.7, 'ZXY' );
		
		slot = this.addSlot( 0.36*this.flip*length, 1.13*length, -0.0*length );
		slot.setRotation( 0, Math.PI/2, -3*this.flip*Math.PI/180, 'ZXY' );
		
		slot = this.addSlot( 0.12*this.flip*length, 1.17*length, -0.0*length );
		slot.setRotation( 0, Math.PI/2, -this.flip*Math.PI/180, 'ZXY' );
		
		slot = this.addSlot( -0.12*this.flip*length, 1.16*length, -0.0*length );
		slot.setRotation( 0, Math.PI/2, 1*this.flip*Math.PI/180, 'ZXY' );

		slot = this.addSlot( -0.36*this.flip*length, 1.09*length, -0.0*length );
		slot.setRotation( 0, Math.PI/2, 3*this.flip*Math.PI/180, 'ZXY' );
		
		filename = filename.split('/').pop();
		if( VERTICES[filename] && FACES[filename] )
		{
			
			// 3D convex shape
			var vertices = [...VERTICES[filename]];
			var faces = FACES[filename];
			
			// flip x coordinates of vertices and reverse order of faces
			if( !left )
			{
				vertices = vertices.map( v=>[-v[0],v[1],v[2]] );
				faces = faces.map( f=>f.toReversed() );
			}
			
			// physics
			this.physics = PHYSICS.convex( vertices, faces );
			this.physics.threejs = this;
			this.debugConvex( vertices, faces );
		
			PHYSICS.bodies.push( this );
		}

		var that = this;
		function recolor( )
		{
			// flip left/right palm
			that.mainMesh.scale.x *= that.flip;
		
			that.recolor( [0,0.21,1], [0.3,0.3,0.3] );
		}
	} // RoundPalm.constructor
	
} // RoundPalm






export { RoundFinger, RoundPalm };